Class = MARTeContainer
StateMachineName = StateMachine
Level1Name = LEVEL1
MenuContainerName = MARTe
+MARTe = {
    Class = MenuContainer
}
+DriverPool = {
    Class = GCReferenceContainer
    +TimerBoard = {
        Class = GenericTimerDrv
        NumberOfInputs = 2
        NumberOfOutputs = 0
        TimerUsecPeriod = 1000
        SynchronizationMethod = Synchronizing
        CPUMask = 1
    }
}
+Messages = {
    Class = GCReferenceContainer
    +FatalErrorMessage = {
        Class = MessageDeliveryRequest
        Destinations = StateMachine
        MsecTimeOut = 1000
        Flags = NoReply
        Message = {
            Class = Message
            Code = 0x776
            Content = UNRECOVERABLE
        }
    }
    +ConfigLoadErrorMessage = {
        Class = MessageDeliveryRequest
        Destinations = StateMachine
        MsecTimeOut = 1000
        Flags = NoReply
        Message = {
            Class = Message
            Code = 0x777
            Content = CONFIG_ERROR
        }
    }
    +ConfigLoadOKMessage = {
        Class = MessageDeliveryRequest
        Destinations = StateMachine
        MsecTimeOut = 1000
        Flags = NoReply
        Message = {
            Class = Message
            Code = 0x778
            Content = CONFIG_OK
        }
    }
    +SafetyErrorMessage = {
        Class = MessageDeliveryRequest
        Destinations = MARTe
        MsecTimeOut = 1000
        Flags = NoReply
        Message = {
            Class = Message
            Content = ERROR
        }
    }
}
+ExternalTimeTriggeringService = {
    Class = InterruptDrivenTTS
    TsOnlineUsecPeriod = 1000
    TsOnlineUsecPhase = 0
    TsOfflineUsecPeriod = 1000
    TsOfflineUsecPhase = 0
    TimeModule = {
        BoardName = TimerBoard
    }
}
+Thread_1 = {
    Class = RealTimeThread
    ThreadPriority = 28
    RunOnCPU = 2
    RTStatusChangeMsecTimeout = 1000
    SMStatusChangeMsecTimeout = 1000
    OfflineSemaphoreTimeout = 50
    TriggeringServiceName = MARTe.ExternalTimeTriggeringService
    SafetyMsecSleep = 1
    +DDB = {
        Class = DDB
    }
    +Timer = {
        Class = IOGAMs::TimeInputGAM
        TriggeringServiceName = ExternalTimeTriggeringService
        BoardName = TimerBoard
        Signals = {
            time = {
                SignalName = usecTime
                SignalType = uint32
            }
            counter = {
                SignalName = counter
                SignalType = int32
            }
        }
    }
    +WaveformGen = {
        Class = WaveformGenerator
        UsecTime = usecTime
        UsecTimeType = uint32
        +waterHeightReference = {
            Class = WaveformClassSine
            Frequency = 0.1
            Gain = 1
            Offset = 2.5
            Tend = 2000
        }
        +zeroSignal = {
            Class = WaveformClassPoints
            TimeVector = {0 1}
            ValueVector = {0 0}
            Frequency = 1
            Tend = 2000
        }
    }
    +PIDGAM = {
        Class = PIDGAM
        TStart = 0.0
        TEnd = 2000.0
        InputSignals = {
            PIDInput = {
                SignalName = PIDIn
                SignalType = PIDGAMInputStructure
                FlatNamed = True
            }
        }
        OutputSignals = {
            PIDOutput = {
                SignalName = PIDOut
                SignalType = PIDGAMOutputStructure
                FlatNamed = True
            }
        }
        Remappings = {
            InputInterface = {
                usecTime = usecTime
                reference = waterHeightReference
                measurement = waterHeight
                feedforward = zeroSignal
            }
            OutputInterface = {
                controlSignal = pumpVoltageRequest
                feedback = pumpVoltageRequest
                error = pidHeightError
                integratorState = pidIntState
            }
        }
        Kp = 3.00
        Ki = 2.00
        Kd = 0.20
        SamplingTime = 0.001
        ControllerOn = On
    }
    +MathGAM = {
        Class = MathGAM
        scaler = 2.0
        offset = 1.0
        InputSignals = {
            in1 = {
                SignalName = waterHeight
                SignalType = float
            }
        }
        OutputSignals = {
            out1 = {
                SignalName = MathOutput
                SignalType = float
            }
        }
    }
    +WaterTank = {
        Class = WaterTank
        InputSignals = {
            usecTime = {
                SignalName = usecTime
                SignalType = uint32
            }
            voltage = {
                SignalName = pumpVoltageRequest
                SignalType = float
            }
        }
        OutputSignals = {
            height = {
                SignalName = waterHeight
                SignalType = float
            }
            pumpVoltage = {
                SignalName = pumpVoltage
                SignalType = float
            }
        }
        SVGFileLocation = "../../GAMs/WaterTank/WaterTank.svg"
        AnimationEnabled = 1
        aFlowRate = 20.0
        bFlowRate = 50.0
        TankArea = 20.0
        MaxVoltage = 5
        MinVoltage = 0
    }
    +Statistic = {
        Class = WebStatisticGAM
        Verbose = True
        FrequencyOfVerbose = 2000000
        Signals = {
            SignalU = {
                SignalName = usecTime
                SignalType = uint32
            }
            Signal0 = {
                SignalName = CycleUsecTime
                SignalType = float
            }
            Signal1 = {
                SignalName = waterHeightReference
                SignalType = float
            }
            Signal2 = {
                SignalName = waterHeight
                SignalType = float
            }
            Signal3 = {
                SignalName = pumpVoltageRequest
                SignalType = float
            }
            Signal4 = {
                SignalName = pumpVoltage
                SignalType = float
            }
            Signal5 = {
                SignalName = TimerAbsoluteUsecTime
                SignalType = float
            }
            Signal6 = {
                SignalName = WaveformGenAbsoluteUsecTime
                SignalType = float
            }
            Signal7 = {
                SignalName = PIDGAMAbsoluteUsecTime
                SignalType = float
            }
            Signal8 = {
                SignalName = WaterTankAbsoluteUsecTime
                SignalType = float
            }
            Signal9 = {
                SignalName = StatisticAbsoluteUsecTime
                SignalType = float
            }
            Signal10 = {
                SignalName = CollectionAbsoluteUsecTime
                SignalType = float
            }
            Signal11 = {
                SignalName = TimerRelativeUsecTime
                SignalType = float
            }
            Signal12 = {
                SignalName = WaveformGenRelativeUsecTime
                SignalType = float
            }
            Signal13 = {
                SignalName = PIDGAMRelativeUsecTime
                SignalType = float
            }
            Signal14 = {
                SignalName = WaterTankRelativeUsecTime
                SignalType = float
            }
            Signal15 = {
                SignalName = StatisticRelativeUsecTime
                SignalType = float
            }
            Signal16 = {
                SignalName = CollectionRelativeUsecTime
                SignalType = float
            }
        }
    }
    +PlottingGAM = {
        Class = PlottingGAM::PlottingGAM
        HttpRefreshMsecTime = 500
        +Window1 = {
            Class = PlotWindow::PlotWindow
            XAxisSignalName = usecTime
            XAxisSignalType = uint32
            XAxisScaleFactor = 0.001
            PlotLastNBuffers = 3
            PlotPixelWidth = 1250
            PlotPixelHeight = 350
            OnlyPositiveY = Yes
            YAxisScale = Linear
            XLabel = "Time (ms)"
            YLabel = cm
            InputSignals = {
                Signal1 = {
                    SignalName = waterHeightReference
                    SignalType = float
                }
                Signal2 = {
                    SignalName = waterHeight
                    SignalType = float
                }
            }
        }
        +Window3 = {
            Class = PlotWindow::PlotWindow
            XAxisSignalName = usecTime
            XAxisSignalType = uint32
            XAxisScaleFactor = 0.001
            PlotLastNBuffers = 500
            PlotPixelWidth = 1250
            PlotPixelHeight = 350
            OnlyPositiveY = Yes
            YAxisScale = linear
            XLabel = "Time (ms)"
            YLabel = "Cycle time (s)"
            InputSignals = {
                Signal1 = {
                    SignalName = CycleUsecTime
                    SignalType = float
                }
            }
        }
    }
    +Collection = {
        Class = CollectionGAMs::DataCollectionGAM
        UsecTimeSignalName = usecTime
        TimeSignalType = uint32
        PreTrigger = 200
        EventTrigger = {
            MaxFastAcquisitionPoints = 800
            PointsForSingleFastAcquisition = 400
            TimeWindow0 = {
                NOfSamples = 40000
                UsecPeriod = 1000
            }
        }
        NOfAcquisitionSamples = 400000
        Signals = {
            CLOCK = {
                SignalName = usecTime
                JPFName = TIME
                SignalType = uint32
                Cal0 = 0.0
                Cal1 = 1.000000e-06
            }
            CycleTime = {
                SignalName = CycleUsecTime
                JPFName = CycleTime
                SignalType = float
            }
            WaterReference = {
                SignalName = waterHeightReference
                JPFName = WaterHeightReference
                SignalType = float
            }
            WaterHeight = {
                SignalName = waterHeight
                JPFName = WaterHeight
                SignalType = float
            }
            PumpVoltageReq = {
                SignalName = pumpVoltageRequest
                JPFName = PumpVoltageRequest
                SignalType = float
            }
            PumpVoltage = {
                SignalName = pumpVoltage
                JPFName = PumpVoltage
                SignalType = float
            }
            PIDError = {
                SignalName = pidHeightError
                JPFName = PIDError
                SignalType = float
            }
            PIDIntState = {
                SignalName = pidIntState
                JPFName = PIDIntState
                SignalType = float
            }
            Signal5 = {
                SignalName = TimerAbsoluteUsecTime
                JPFName = TimerAbsoluteUsecTime
                SignalType = float
            }
            Signal6 = {
                SignalName = WaveformGenAbsoluteUsecTime
                JPFName = WaveformGenAbsoluteUsecTime
                SignalType = float
            }
            Signal7 = {
                SignalName = PIDGAMAbsoluteUsecTime
                JPFName = PIDGAMAbsoluteUsecTime
                SignalType = float
            }
            Signal8 = {
                SignalName = WaterTankAbsoluteUsecTime
                JPFName = WaterTankAbsoluteUsecTime
                SignalType = float
            }
            Signal9 = {
                SignalName = StatisticAbsoluteUsecTime
                JPFName = StatisticAbsoluteUsecTime
                SignalType = float
            }
            Signal10 = {
                SignalName = CollectionAbsoluteUsecTime
                JPFName = CollectionAbsoluteUsecTime
                SignalType = float
            }
            Signal11 = {
                SignalName = TimerRelativeUsecTime
                JPFName = TimerRelativeUsecTime
                SignalType = float
            }
            Signal12 = {
                SignalName = WaveformGenRelativeUsecTime
                JPFName = WaveformGenRelativeUsecTime
                SignalType = float
            }
            Signal13 = {
                SignalName = PIDGAMRelativeUsecTime
                JPFName = PIDGAMRelativeUsecTime
                SignalType = float
            }
            Signal14 = {
                SignalName = WaterTankRelativeUsecTime
                JPFName = WaterTankRelativeUsecTime
                SignalType = float
            }
            Signal15 = {
                SignalName = StatisticRelativeUsecTime
                JPFName = StatisticRelativeUsecTime
                SignalType = float
            }
            Signal16 = {
                SignalName = CollectionRelativeUsecTime
                JPFName = CollectionRelativeUsecTime
                SignalType = float
            }
            Signal17 = {
                SignalName = MathOutput
                JPFName = MathOutput
                SignalType = float
            }
        }
    }
    Online = "Timer WaveformGen PIDGAM WaterTank PlottingGAM Statistic Collection"
    Offline = "Timer PlottingGAM Statistic"
}
